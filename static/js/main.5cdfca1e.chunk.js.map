{"version":3,"sources":["reducers/todayDateReducer.js","reducers/locationReducer.js","components/Plot.js","reducers/plotNames.js","reducers/expandedTabreducer.js","reducers/dataViewreducer.js","reducers/infoReducer.js","reducers/dateRangeReducer.js","components/Info.js","reducers/navigationReducer.js","reducers/plotReducer.js","reducers/hiddenBarReducer.js","components/dateTab.js","reducers/searchReducer.js","components/searchResults.js","components/Form.js","components/secondNavBar.js","components/navBar.js","App.js","serviceWorker.js","store.js","index.js"],"names":["reducer","state","today","lastWeek","action","type","dates","data","formatted_date","lastWeekFormatted","lastMonth","lastMonthFormatted","lastYear","lastYearFormatted","threeDays","lastThreeDaysFormatted","setName","name","dispatch","a","setStartDate","date","setEndDate","id","newName","concat","filter","i","indexOf","startDate","endDate","newId","PlotDrawer","dataView","plotName","Plot","createPlotlyComponent","Plotly","infos","useDispatch","useSelector","mode","plot","marker","marker1","marker2","barmode","markerNames","time","temp","precipitations","x","y","y1","title","dataset","map","element","tavg","tmin","tmax","three","one","two","dwpt","prcp","snow","rhum","className","layout","legend","xanchor","bgcolor","config","responsive","setMarkerNames","number","setExpandedTab","panel","setDataView","view","setInfos","setDateRange","Info","promiseInProgress","usePromiseTracker","expanded","expandedTab","useState","graphType","setGraphType","todayDate","location","useParams","pageLocation","useLocation","stationData","find","station","setStation","hourlyDisabled","inventory","hourly","start","dailyDisabled","daily","en","setId","infoFormatted","dateRange","document","getElementById","classList","add","useEffect","yName","y1Name","y2Name","setAllMarkers","getWeatherInfo","stationID","trackPromise","fetch","method","headers","process","weatherInfo","json","formattedInfo","catch","err","then","value","length","ToggleButtonGroup","size","ToggleButton","disabled","onClick","querySelector","remove","e","target","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","key","CircularProgress","setBarMode","setType","setMarker","color","setHidden","hidden","DateTab","onSubmit","preventDefault","TextField","label","onChange","inputProps","max","defaultValue","placeholder","IconButton","SearchResults","locationName","searchResults","shortNames","console","log","stations","stationsFound","toLowerCase","includes","ID","suggestions","setTimeout","to","SearchInput","setSearchClicked","currentSearch","Input","autoFocus","autoComplete","startAdornment","InputAdornment","input","onBlur","onFocus","SecondNavBar","searchClicked","iconClicked","setIconClicked","tabNumber","setTabNumber","radioValue","setRadioValue","markersChecked","setMarkersChecked","linesChecked","setLinesChecked","pathname","match","newMode","handleTabChange","event","handleRadioChange","Navbar","sticky","Form","for","TabContext","indicatorColor","TabList","aria-label","Tab","TabPanel","Radio","checked","Checkbox","handleDisplay","NavigationBar","doubletap","setDoubletap","locationId","locationPath","currentPage","locationArray","forEach","push","selectedId","bg","variant","Brand","Nav","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","slice","focus","App","pathName","navigation","Date","previousDates","formatDate","month","getMonth","day","getDate","year","getFullYear","getTodayDate","Paper","elevation","path","alt","src","Boolean","window","hostname","combineReducers","locationReducer","todayDateReducer","searchReducer","navigationReducer","infoReducer","plotReducer","plotNames","tabExpandedReducer","dataViewReducer","hiddenBarReducer","dateRangeReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5cdfca1e.chunk.js","sourcesContent":["export const getTodayDate = (date) => {\r\n  return async (dispatch) => {\r\n    const previousDates = (date, time) => {\r\n      let lastWeek = new Date(date - time * 24 * 60 * 60 * 1000);\r\n      return lastWeek;\r\n    };\r\n    const formatDate = (date) => {\r\n      let month = date.getMonth() + 1;\r\n      let day = date.getDate();\r\n      if (month < 10) month = \"0\" + (date.getMonth() + 1);\r\n      if (day < 10) day = \"0\" + date.getDate();\r\n      const finalDate = { year: date.getFullYear(), month, day };\r\n      return finalDate;\r\n    };\r\n    let formatted_date =\r\n      formatDate(date).year +\r\n      \"-\" +\r\n      formatDate(date).month +\r\n      \"-\" +\r\n      formatDate(date).day;\r\n\r\n    let lastWeekFormatted =\r\n      formatDate(previousDates(date, 7)).year +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 7)).month +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 7)).day;\r\n\r\n    let lastMonthFormatted =\r\n      formatDate(previousDates(date, 30)).year +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 30)).month +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 30)).day;\r\n    let lastYearFormatted =\r\n      formatDate(previousDates(date, 365)).year +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 365)).month +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 365)).day;\r\n    let lastThreeDaysFormatted =\r\n      formatDate(previousDates(date, 3)).year +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 3)).month +\r\n      \"-\" +\r\n      formatDate(previousDates(date, 3)).day;\r\n    console.log(lastYearFormatted);\r\n    dispatch({\r\n      type: \"TODAY_DATE\",\r\n      data: {\r\n        formatted_date,\r\n        lastWeekFormatted,\r\n        lastMonthFormatted,\r\n        lastYearFormatted,\r\n        lastThreeDaysFormatted,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nconst reducer = (state = { today: \"\", lastWeek: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case \"TODAY_DATE\": {\r\n      let dates = {};\r\n      dates.today = action.data.formatted_date;\r\n      dates.lastWeek = action.data.lastWeekFormatted;\r\n      dates.lastMonth = action.data.lastMonthFormatted;\r\n      dates.lastYear = action.data.lastYearFormatted;\r\n      dates.threeDays = action.data.lastThreeDaysFormatted;\r\n      return dates;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const setName = (name) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_NAME\", data: name });\r\n  };\r\n};\r\nexport const setStartDate = (date) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_START_DATE\", data: date });\r\n  };\r\n};\r\nexport const setEndDate = (date) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_END_DATE\", data: date });\r\n  };\r\n};\r\nexport const setId = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_ID\", data: id });\r\n  };\r\n};\r\nconst reducer = (state = { name: [], id: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"NEW_NAME\": {\r\n      let newName = state.name.concat(action.data);\r\n      newName = newName.filter((a, i) => newName.indexOf(a) === i);\r\n      return {\r\n        name: newName,\r\n        startDate: state.startDate,\r\n        id: state.id,\r\n        endDate: state.endDate,\r\n      };\r\n    }\r\n    case \"NEW_START_DATE\": {\r\n      return {\r\n        name: state.name,\r\n        startDate: action.data,\r\n        id: state.id,\r\n        endDate: state.endDate,\r\n      };\r\n    }\r\n    case \"NEW_END_DATE\": {\r\n      return {\r\n        endDate: action.data,\r\n        name: state.name,\r\n        startDate: state.startDate,\r\n        id: state.id,\r\n      };\r\n    }\r\n    case \"NEW_ID\": {\r\n      let newId = state.id.concat(action.data);\r\n      newId = newId.filter((a, i) => newId.indexOf(a) === i);\r\n      return {\r\n        endDate: state.endDate,\r\n        name: state.name,\r\n        startDate: state.startDate,\r\n        id: newId,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport Plotly from \"plotly.js\";\r\nimport createPlotlyComponent from \"react-plotly.js/factory\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst PlotDrawer = ({ dataView, plotName }) => {\r\n  const Plot = createPlotlyComponent(Plotly);\r\n  const dispatch = useDispatch();\r\n  const infos = useSelector((state) => state.infos);\r\n  const mode = useSelector((state) => state.plot.mode);\r\n  const type = useSelector((state) => state.plot.type);\r\n  const marker = useSelector((state) => state.plot.marker);\r\n  const marker1 = useSelector((state) => state.plot.marker1);\r\n  const marker2 = useSelector((state) => state.plot.marker2);\r\n  const barmode = useSelector((state) => state.plot.barmode);\r\n  const markerNames = useSelector((state) => state.markerNames);\r\n  let [dates, temperatureAvg, temperatureMin, temperatureMax] = \"\";\r\n  let [time, temp, dewpoint, precipitations, snow, rhum] = \"\";\r\n  let [x, y, y1, y2] = \"\";\r\n  let title = \"\";\r\n  let dataset = [];\r\n  if (infos) {\r\n    if (dataView === \"daily\" && plotName === \"Temperature\") {\r\n      dates = infos.map((element) => element.date);\r\n      temperatureAvg = infos.map((element) => element.tavg);\r\n      temperatureMin = infos.map((element) => element.tmin);\r\n      temperatureMax = infos.map((element) => element.tmax);\r\n      x = dates;\r\n      y = temperatureAvg;\r\n      y1 = temperatureMin;\r\n\r\n      y2 = temperatureMax;\r\n\r\n      title = \"Daily Temperature\";\r\n      dataset = [\r\n        { x, y: y2, type, mode, marker: marker2, name: markerNames.three },\r\n        { x, y, type, mode, marker: marker, name: markerNames.one },\r\n        { x, y: y1, type, mode, marker: marker1, name: markerNames.two },\r\n      ];\r\n    } else if (dataView === \"hourly\" && plotName === \"Temperature\") {\r\n      time = infos.map((element) => element.time);\r\n      temp = infos.map((element) => element.temp);\r\n      dewpoint = infos.map((element) => element.dwpt);\r\n      x = time;\r\n      y = temp;\r\n      y1 = dewpoint;\r\n      title = \"Hourly Temperature\";\r\n      dataset = [\r\n        { x, y, type, mode, marker: marker, name: markerNames.one },\r\n        { x, y: y1, type, mode, marker: marker1, name: markerNames.two },\r\n      ];\r\n    } else if (dataView === \"daily\" && plotName === \"Precipitations\") {\r\n      dates = infos.map((element) => element.date);\r\n      precipitations = infos.map((element) => element.prcp);\r\n      snow = infos.map((element) => element.snow);\r\n      x = dates;\r\n      y = precipitations;\r\n      y1 = snow;\r\n      title = \"Daily Precipitations\";\r\n      dataset = [\r\n        { x, y, type, mode, marker: marker, name: markerNames.one },\r\n        { x, y: y1, type, mode, marker: marker1, name: markerNames.two },\r\n      ];\r\n    } else if (dataView === \"hourly\" && plotName === \"Relative Humidity\") {\r\n      time = infos.map((element) => element.time);\r\n      rhum = infos.map((element) => element.rhum);\r\n      x = time;\r\n      y = rhum;\r\n      title = \"Hourly Relative Humidity (%)\";\r\n      dataset = [{ x, y, type, mode, marker: marker, name: markerNames.one }];\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Plot\r\n      className=\"Plot\"\r\n      data={dataset}\r\n      layout={{\r\n        barmode,\r\n        title,\r\n        legend: { x: 1, xanchor: \"right\", y: 1, bgcolor: \"rgba(0,0,0,0)\" },\r\n      }}\r\n      config={{ responsive: true }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PlotDrawer;\r\n","export const setMarkerNames = (name, number) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_MARKER_NAME\", data: name, number });\r\n  };\r\n};\r\nexport const reducer = (\r\n  state = {\r\n    one: \"Data 1\",\r\n    two: \"Data 2\",\r\n    three: \"Data 3\",\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"NEW_MARKER_NAME\": {\r\n      switch (action.number) {\r\n        case \"1\": {\r\n          return {\r\n            one: action.data,\r\n            two: state.two,\r\n            three: state.three,\r\n          };\r\n        }\r\n        case \"2\": {\r\n          return {\r\n            one: state.one,\r\n            two: action.data,\r\n            three: state.three,\r\n          };\r\n        }\r\n        case \"3\": {\r\n          return {\r\n            one: state.one,\r\n            two: state.two,\r\n            three: action.data,\r\n          };\r\n        }\r\n        default: {\r\n          return state;\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default reducer;\r\n","export const setExpandedTab = (panel) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_PANEL\", data: panel });\r\n  };\r\n};\r\n\r\nconst reducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    default: {\r\n      return state;\r\n    }\r\n    case \"NEW_PANEL\": {\r\n      return action.data;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const setDataView = (view) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_DATAVIEW\", data: view });\r\n  };\r\n};\r\n\r\nconst reducer = (state = \"daily\", action) => {\r\n  switch (action.type) {\r\n    default: {\r\n      return state;\r\n    }\r\n    case \"NEW_DATAVIEW\": {\r\n      return action.data;\r\n    }\r\n  }\r\n};\r\nexport default reducer;\r\n","export const setInfos = (infos) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_INFO\", data: infos });\r\n  };\r\n};\r\n\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"NEW_INFO\": {\r\n      return action.data;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const setDateRange = (name) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_DATERANGE\", data: name });\r\n  };\r\n};\r\n\r\nconst reducer = (state = \"dateRange1\", action) => {\r\n  switch (action.type) {\r\n    case \"NEW_DATERANGE\": {\r\n      return action.data;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setName,\r\n  setId,\r\n  setStartDate,\r\n  setEndDate,\r\n} from \"../reducers/locationReducer\";\r\nimport stationData from \"../stations.json\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PlotDrawer from \"./Plot\";\r\n\r\nimport { setMarkerNames } from \"../reducers/plotNames\";\r\n\r\nimport { setExpandedTab } from \"../reducers/expandedTabreducer\";\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { setDataView } from \"../reducers/dataViewreducer\";\r\nimport { setInfos } from \"../reducers/infoReducer\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\n\r\nimport { setDateRange } from \"../reducers/dateRangeReducer\";\r\n\r\nconst Info = () => {\r\n  const dataView = useSelector((state) => state.dataView);\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  const expanded = useSelector((state) => state.expandedTab);\r\n  const infos = useSelector((state) => state.infos);\r\n  const [graphType, setGraphType] = useState(\r\n    expanded === \"panel1\" ? \"temp\" : \"prcp\"\r\n  );\r\n  const todayDate = useSelector((state) => state.todayDate);\r\n\r\n  let startDate = useSelector((state) => state.location.startDate);\r\n  let endDate = useSelector((state) => state.location.endDate);\r\n  const [id, setParamId] = useState(useParams().id);\r\n\r\n  const pageLocation = useLocation();\r\n  const dispatch = useDispatch();\r\n  const [station, setStation] = useState(\r\n    stationData.find((station) => station.id === id)\r\n  );\r\n  const hourlyDisabled = station.inventory.hourly.start === null ? true : false;\r\n  const dailyDisabled = station.inventory.daily.start === null ? true : false;\r\n  dispatch(setName(station.name.en));\r\n  dispatch(setId(station.id));\r\n\r\n  if (dailyDisabled && dataView === \"daily\") dispatch(setDataView(\"hourly\"));\r\n\r\n  let infoFormatted = [];\r\n\r\n  const dateRange = useSelector((state) => state.dateRange);\r\n  if (document.getElementById(dateRange))\r\n    document.getElementById(dateRange).classList.add(\"clickedDate\");\r\n\r\n  useEffect(() => {\r\n    const setAllMarkers = () => {\r\n      let [yName, y1Name, y2Name] = \"\";\r\n      if (dataView === \"daily\") {\r\n        if (graphType === \"temp\") {\r\n          yName = \"Average\";\r\n          y1Name = \"Min\";\r\n          y2Name = \"Max\";\r\n        } else if (graphType === \"prcp\") {\r\n          yName = \"Precipitations\";\r\n          y1Name = \"Snow\";\r\n          y2Name = null;\r\n        }\r\n      } else if (dataView === \"hourly\") {\r\n        if (graphType === \"temp\") {\r\n          yName = \"Temperature\";\r\n          y1Name = \"Dewpoint\";\r\n          y2Name = null;\r\n        } else if (graphType === \"prcp\") {\r\n          yName = \"Rel. Humidity\";\r\n          y1Name = null;\r\n          y2Name = null;\r\n        }\r\n      }\r\n      dispatch(setMarkerNames(yName, \"1\"));\r\n      dispatch(setMarkerNames(y1Name, \"2\"));\r\n      dispatch(setMarkerNames(y2Name, \"3\"));\r\n    };\r\n    setAllMarkers();\r\n  }, [graphType, dataView, infos, dispatch]);\r\n\r\n  const getWeatherInfo = async (startDate, endDate, stationID, type) => {\r\n    if (type === \"daily\") {\r\n      const weatherInfo = await trackPromise(\r\n        fetch(\r\n          `https://api.meteostat.net/v2/stations/daily?station=${stationID}&start=${startDate}&end=${endDate}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: { \"x-api-key\": process.env.REACT_APP_API_KEY },\r\n          }\r\n        )\r\n      );\r\n      const formattedInfo = await trackPromise(weatherInfo.json());\r\n\r\n      return formattedInfo.data;\r\n    } else if (type === \"hourly\") {\r\n      const weatherInfo = await trackPromise(\r\n        fetch(\r\n          `https://api.meteostat.net/v2/stations/hourly?station=${stationID}&start=${startDate}&end=${endDate}`,\r\n          {\r\n            method: \"GET\",\r\n            headers: { \"x-api-key\": process.env.REACT_APP_API_KEY },\r\n          }\r\n        )\r\n      );\r\n\r\n      const formattedInfo = await trackPromise(weatherInfo.json());\r\n\r\n      return formattedInfo.data;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(setInfos(null));\r\n    setStation(stationData.find((station) => station.id === id));\r\n  }, [dispatch, id, pageLocation]);\r\n\r\n  useEffect(() => {\r\n    if (!infos) {\r\n      getWeatherInfo(startDate, endDate, id, dataView)\r\n        .catch((err) => \"\")\r\n        .then((value) => {\r\n          if (value) infoFormatted = [...value];\r\n          if (infoFormatted.length > 0) dispatch(setInfos(infoFormatted));\r\n        });\r\n    }\r\n  }, [startDate, endDate, infos, id, dataView, graphType]);\r\n\r\n  return (\r\n    <div className=\"infos\">\r\n      <ToggleButtonGroup type=\"checkbox\" value={dataView} size=\"sm\">\r\n        <ToggleButton\r\n          disabled={hourlyDisabled}\r\n          onClick={() => {\r\n            if (!hourlyDisabled) {\r\n              dispatch(setDataView(\"hourly\"));\r\n              if (document.querySelector(\".clickedDate\"))\r\n                document\r\n                  .querySelector(\".clickedDate\")\r\n                  .classList.remove(\"clickedDate\");\r\n              dispatch(setStartDate(todayDate.today));\r\n              dispatch(setEndDate(todayDate.today));\r\n              dispatch(setDateRange(\"dateRange1\"));\r\n              dispatch(setExpandedTab(\"panel1\"));\r\n              dispatch(setInfos(null));\r\n            }\r\n          }}\r\n          value={\"hourly\"}\r\n        >\r\n          Hourly\r\n        </ToggleButton>\r\n\r\n        <ToggleButton\r\n          disabled={dailyDisabled}\r\n          value={\"daily\"}\r\n          onClick={(e) => {\r\n            if (!dailyDisabled) {\r\n              dispatch(setDataView(\"daily\"));\r\n              if (document.querySelector(\".clickedDate\"))\r\n                document\r\n                  .querySelector(\".clickedDate\")\r\n                  .classList.remove(\"clickedDate\");\r\n              dispatch(setStartDate(todayDate.lastWeek));\r\n              dispatch(setEndDate(todayDate.today));\r\n              dispatch(setDateRange(\"dateRange1\"));\r\n              dispatch(setExpandedTab(\"panel1\"));\r\n              dispatch(setInfos(null));\r\n            }\r\n          }}\r\n        >\r\n          Daily\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n      <div>\r\n        <h2>{station.name.en}</h2>\r\n        <h3 id=\"dateInfos\">\r\n          {startDate !== endDate\r\n            ? `From ${startDate} to ${endDate}`\r\n            : `${startDate}`}\r\n        </h3>\r\n        <div className=\"infoCards\">\r\n          <span\r\n            id=\"dateRange1\"\r\n            className=\"infoCard\"\r\n            name={dataView === \"daily\" ? \"Week\" : \"Today\"}\r\n            onClick={(e) => {\r\n              if (document.querySelector(\".clickedDate\"))\r\n                document\r\n                  .querySelector(\".clickedDate\")\r\n                  .classList.remove(\"clickedDate\");\r\n              e.target.classList.add(\"clickedDate\");\r\n              dataView === \"daily\"\r\n                ? dispatch(setStartDate(todayDate.lastWeek))\r\n                : dispatch(setStartDate(todayDate.today));\r\n              if (expanded === \"\") dispatch(setExpandedTab(\"panel1\"));\r\n              dispatch(setDateRange(e.target.id));\r\n              dispatch(setInfos(null));\r\n            }}\r\n          >\r\n            {dataView === \"daily\" ? \"Week\" : \"Today\"}\r\n          </span>\r\n\r\n          <span\r\n            id=\"dateRange2\"\r\n            value={dataView === \"daily\" ? \"Month\" : \"3 Days \"}\r\n            onClick={(e) => {\r\n              if (document.querySelector(\".clickedDate\"))\r\n                document\r\n                  .querySelector(\".clickedDate\")\r\n                  .classList.remove(\"clickedDate\");\r\n              e.target.classList.add(\"clickedDate\");\r\n\r\n              dataView === \"daily\"\r\n                ? dispatch(setStartDate(todayDate.lastMonth))\r\n                : dispatch(setStartDate(todayDate.threeDays));\r\n              dispatch(setEndDate(todayDate.today));\r\n              if (expanded === \"\") dispatch(setExpandedTab(\"panel1\"));\r\n              dispatch(setDateRange(e.target.id));\r\n              dispatch(setInfos(null));\r\n            }}\r\n            className=\"infoCard\"\r\n          >\r\n            {dataView === \"daily\" ? \"Month\" : \"3 Days \"}\r\n          </span>\r\n          <span\r\n            id=\"dateRange3\"\r\n            name={dataView === \"daily\" ? \"Year\" : \"Week\"}\r\n            onClick={(e) => {\r\n              if (document.querySelector(\".clickedDate\"))\r\n                document\r\n                  .querySelector(\".clickedDate\")\r\n                  .classList.remove(\"clickedDate\");\r\n              e.target.classList.add(\"clickedDate\");\r\n              dataView === \"daily\"\r\n                ? dispatch(setStartDate(todayDate.lastYear))\r\n                : dispatch(setStartDate(todayDate.lastWeek));\r\n              dispatch(setEndDate(todayDate.today));\r\n              if (expanded === \"\") dispatch(setExpandedTab(\"panel1\"));\r\n              dispatch(setDateRange(e.target.id));\r\n              dispatch(setInfos(null));\r\n            }}\r\n            className=\"infoCard\"\r\n          >\r\n            {dataView === \"daily\" ? \"Year\" : \"Week\"}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <div className=\"accordionBlock\">\r\n            <Accordion expanded={expanded === \"panel1\"}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id={\r\n                  expanded === \"panel1\"\r\n                    ? \"panel1a-header expanded\"\r\n                    : \"panel1a-header\"\r\n                }\r\n                onClick={() => {\r\n                  setGraphType(\"temp\");\r\n\r\n                  if (expanded === \"panel1\") dispatch(setExpandedTab(\"\"));\r\n                  if (expanded === \"panel2\") dispatch(setExpandedTab(\"panel1\"));\r\n                  if (expanded === \"\") dispatch(setExpandedTab(\"panel1\"));\r\n                }}\r\n              >\r\n                Temperature\r\n              </AccordionSummary>\r\n\r\n              <AccordionDetails className=\"accordion\">\r\n                {\" \"}\r\n                {infos ? (\r\n                  <PlotDrawer\r\n                    dataView={dataView}\r\n                    key={infos}\r\n                    plotName={\"Temperature\"}\r\n                  />\r\n                ) : promiseInProgress ? (\r\n                  <CircularProgress />\r\n                ) : dataView === \"daily\" ? (\r\n                  \"No Results. Sometimes there is no data. Make sure your request is not more than 370 days. \"\r\n                ) : (\r\n                  \"No Results. Sometimes there is no data. Make sure your request is not more than 240 hours (10 days). \"\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n\r\n            <Accordion expanded={expanded === \"panel2\"}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel2a-content\"\r\n                id={\r\n                  expanded === \"panel2\"\r\n                    ? \"panel2a-header expanded\"\r\n                    : \"panel2a-header\"\r\n                }\r\n                onClick={() => {\r\n                  setGraphType(\"prcp\");\r\n                  if (expanded === \"panel1\") dispatch(setExpandedTab(\"panel2\"));\r\n                  if (expanded === \"panel2\") dispatch(setExpandedTab(\"\"));\r\n                  if (expanded === \"\") dispatch(setExpandedTab(\"panel2\"));\r\n                }}\r\n              >\r\n                {dataView === \"daily\" ? \"Precipitations\" : \"Relative Humidity\"}\r\n              </AccordionSummary>\r\n              <AccordionDetails className=\"accordion\">\r\n                {\" \"}\r\n                {infos ? (\r\n                  <PlotDrawer\r\n                    dataView={dataView}\r\n                    key={infos}\r\n                    plotName={\r\n                      dataView === \"daily\"\r\n                        ? \"Precipitations\"\r\n                        : \"Relative Humidity\"\r\n                    }\r\n                  />\r\n                ) : promiseInProgress ? (\r\n                  <CircularProgress />\r\n                ) : dataView === \"daily\" ? (\r\n                  \"No Results. Sometimes there is no data, but make sure your request is not more than 370 days. \"\r\n                ) : (\r\n                  \"No Results. Sometimes there is no data, but make sure your request is not more than 240 hours (10 days). \"\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n//MAKE HOURLY DAILY A REDUX STATE SO ITS GLOBAL\r\n","export const setNavigationPath = (location) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_NAVIGATION\", data: location });\r\n  };\r\n};\r\n\r\nconst reducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"NEW_NAVIGATION\": {\r\n      return action.data;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const setMode = (mode) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"MODE_CHANGE\", data: mode });\r\n  };\r\n};\r\nexport const setBarMode = (barmode) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"BARMODE_CHANGE\", data: barmode });\r\n  };\r\n};\r\n\r\nexport const setType = (type) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"TYPE_CHANGE\", data: type });\r\n  };\r\n};\r\nexport const setMarker = (color, number) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"MARKER_CHANGE\", data: color, number });\r\n  };\r\n};\r\n\r\nexport const reducer = (\r\n  state = {\r\n    mode: \"lines\",\r\n    type: \"scatter\",\r\n    marker: { color: \"#e83c11\" },\r\n    marker1: { color: \"#2812ce\" },\r\n    marker2: { color: \"#d41c1c\" },\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"MODE_CHANGE\": {\r\n      return {\r\n        mode: action.data,\r\n        type: state.type,\r\n        marker: state.marker,\r\n        marker1: state.marker1,\r\n        marker2: state.marker2,\r\n        barmode: state.barmode,\r\n      };\r\n    }\r\n    case \"TYPE_CHANGE\": {\r\n      return {\r\n        mode: state.mode,\r\n        type: action.data,\r\n        marker: state.marker,\r\n        marker1: state.marker1,\r\n        marker2: state.marker2,\r\n        barmode: state.barmode,\r\n      };\r\n    }\r\n    case \"BARMODE_CHANGE\": {\r\n      return {\r\n        mode: state.mode,\r\n        type: state.type,\r\n        marker: state.marker,\r\n        marker1: state.marker1,\r\n        marker2: state.marker2,\r\n        barmode: action.data,\r\n        markerNames: state.markerNames,\r\n      };\r\n    }\r\n    case \"MARKER_CHANGE\": {\r\n      switch (action.number) {\r\n        case \"1\": {\r\n          return {\r\n            mode: state.mode,\r\n            type: state.type,\r\n            marker: { color: action.data },\r\n            marker1: state.marker1,\r\n            marker2: state.marker2,\r\n            barmode: state.barmode,\r\n          };\r\n        }\r\n        case \"2\": {\r\n          return {\r\n            mode: state.mode,\r\n            type: state.type,\r\n            marker: state.marker,\r\n            marker1: { color: action.data },\r\n            marker2: state.marker2,\r\n            barmode: state.barmode,\r\n          };\r\n        }\r\n        case \"3\": {\r\n          return {\r\n            mode: state.mode,\r\n            type: state.type,\r\n            marker: state.marker,\r\n            marker1: state.marker1,\r\n            marker2: { color: action.data },\r\n            barmode: state.barmode,\r\n          };\r\n        }\r\n        default:\r\n          return state;\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const setHidden = (hidden) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_HIDDEN\", data: hidden });\r\n  };\r\n};\r\n\r\nconst reducer = (state = true, action) => {\r\n  switch (action.type) {\r\n    default: {\r\n      return state;\r\n    }\r\n    case \"NEW_HIDDEN\": {\r\n      return action.data;\r\n    }\r\n  }\r\n};\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setStartDate, setEndDate } from \"../reducers/locationReducer\";\r\nimport { setInfos } from \"../reducers/infoReducer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport CancelSharpIcon from \"@material-ui/icons/CancelSharp\";\r\n\r\nimport { setHidden } from \"../reducers/hiddenBarReducer\";\r\nconst DateTab = ({ startDate, endDate, todayDate }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleStartDateChange = (e) => {\r\n    dispatch(setInfos(null));\r\n    return dispatch(setStartDate(e.target.value));\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    dispatch(setInfos(null));\r\n    return dispatch(setEndDate(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"dateSpan flex\">\r\n        <form\r\n          className=\"changeDateForm\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            dispatch(setHidden(true));\r\n          }}\r\n        >\r\n          <TextField\r\n            className=\"dateInput\"\r\n            type=\"date\"\r\n            name=\"startDate\"\r\n            label=\"Start Date\"\r\n            onChange={handleStartDateChange}\r\n            inputProps={{ max: endDate }}\r\n            defaultValue={startDate}\r\n          />\r\n\r\n          {\"   \"}\r\n          <TextField\r\n            className=\"dateInput\"\r\n            type=\"date\"\r\n            placeholder={todayDate}\r\n            inputProps={{ max: todayDate }}\r\n            defaultValue={endDate}\r\n            name=\"endDate\"\r\n            label=\"End Date\"\r\n            onChange={handleEndDateChange}\r\n          />\r\n        </form>\r\n      </span>\r\n      <IconButton\r\n        onClick={() => {\r\n          dispatch(setHidden(true));\r\n        }}\r\n      >\r\n        <CancelSharpIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateTab;\r\n","export const setLocationInput = (input) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: \"NEW_SEARCH_INPUT\", data: input });\r\n  };\r\n};\r\nconst reducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"NEW_SEARCH\": {\r\n      return action.data;\r\n    }\r\n    case \"CLEAR\": {\r\n      return action.data;\r\n    }\r\n    case \"NEW_SEARCH_INPUT\": {\r\n      return action.data;\r\n    }\r\n    case \"NEW_SEARCH_RESULTS\": {\r\n      return state;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default reducer;\r\n\r\n// SLOCATION NAME  = LOCATIONS CLICKED ON, MAKE A NEW ACTION FOR SEARCHED LOCATIONS\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport stationData from \"../stations\";\r\nimport { setName } from \"../reducers/locationReducer\";\r\nimport { setHidden } from \"../reducers/hiddenBarReducer\";\r\n\r\nconst SearchResults = () => {\r\n  const locationName = useSelector((state) => state.searchResults);\r\n  const dispatch = useDispatch();\r\n  const shortNames = stationData.filter(\r\n    (station) => station.name.en.length < 3\r\n  );\r\n  console.log(\"SHORT\", shortNames);\r\n  const stations = stationData.filter(\r\n    (station) =>\r\n      station.inventory.daily.start !== null ||\r\n      station.inventory.hourly.start !== null\r\n  );\r\n  let stationsFound = [];\r\n  if (locationName && locationName.length >= 3)\r\n    stationsFound = stations.filter((station) =>\r\n      station.name.en.toLowerCase().includes(locationName.toLowerCase())\r\n    );\r\n\r\n  if (stationsFound) {\r\n    return stationsFound.map((station) => (\r\n      <Link\r\n        key={station.ID}\r\n        onClick={() => {\r\n          dispatch(setName(station.name.en));\r\n          dispatch(setHidden(true));\r\n          const suggestions = document.querySelector(\".suggestions\");\r\n          setTimeout(() => suggestions.classList.add(\"trueHidden\"), 100);\r\n        }}\r\n        to={`/station/${station.id}`}\r\n      >\r\n        <p className=\"searchList\" key={station.ID}>\r\n          {station.name.en}{\" \"}\r\n        </p>\r\n      </Link>\r\n    ));\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default SearchResults;\r\n\r\n/* {station.inventory.daily.start !== null ? \"Daily \" : \"\"}\r\n{station.inventory.hourly.start ? \" Hourly\" : \"\"}*/\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setLocationInput } from \"../reducers/searchReducer\";\r\nimport SearchResults from \"./searchResults\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nconst SearchInput = ({ setSearchClicked }) => {\r\n  let currentSearch = useSelector((state) => state.searchResults);\r\n  const dispatch = useDispatch();\r\n  const handleNameChange = (e) => {\r\n    e.preventDefault();\r\n\r\n    return dispatch(setLocationInput(e.target.value));\r\n  };\r\n  const handleBlur = () => {\r\n    const suggestions = document.querySelector(\".suggestions\");\r\n    setTimeout(() => suggestions.classList.add(\"trueHidden\"), 150);\r\n    setTimeout(() => setSearchClicked(false), 100);\r\n  };\r\n  const handleFocus = () => {\r\n    const suggestions = document.querySelector(\".suggestions\");\r\n    suggestions.classList.remove(\"trueHidden\");\r\n  };\r\n  return (\r\n    <form className=\"searchForm\">\r\n      <Input\r\n        value={currentSearch}\r\n        autoFocus\r\n        autoComplete=\"off\"\r\n        id=\"search-input\"\r\n        name=\"location\"\r\n        startAdornment={\r\n          <InputAdornment>\r\n            <SearchIcon className=\"searchIcon\" />\r\n          </InputAdornment>\r\n        }\r\n        onChange={handleNameChange}\r\n        onBlur={handleBlur}\r\n        onFocus={handleFocus}\r\n      />\r\n\r\n      <div className=\"suggestions collapsed\" key={currentSearch}>\r\n        <SearchResults key={currentSearch} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setStartDate, setEndDate } from \"../reducers/locationReducer\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { setInfos } from \"../reducers/infoReducer\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport TabList from \"@material-ui/lab/TabList\";\r\nimport TabContext from \"@material-ui/lab/TabContext\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TabPanel from \"@material-ui/lab/TabPanel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { setMode, setType, setBarMode } from \"../reducers/plotReducer\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { setMarker } from \"../reducers/plotReducer\";\r\nimport DateTab from \"./dateTab\";\r\n\r\nimport CancelSharpIcon from \"@material-ui/icons/CancelSharp\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport PaletteSharpIcon from \"@material-ui/icons/PaletteSharp\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\r\nimport ShowChartIcon from \"@material-ui/icons/ShowChart\";\r\nimport { setLocationInput } from \"../reducers/searchReducer\";\r\n\r\nimport Form from \"./Form\";\r\nimport { setHidden } from \"../reducers/hiddenBarReducer\";\r\nconst SecondNavBar = ({ searchClicked, setSearchClicked }) => {\r\n  const hidden = useSelector((state) => state.hidden);\r\n  const [iconClicked, setIconClicked] = useState(\"\");\r\n  const [tabNumber, setTabNumber] = useState(\"2\");\r\n  const [radioValue, setRadioValue] = useState(\"1\");\r\n  const [markersChecked, setMarkersChecked] = useState(true);\r\n  const [linesChecked, setLinesChecked] = useState(true);\r\n  const markerNames = useSelector((state) => state.markerNames);\r\n  const marker = useSelector((state) => state.plot.marker);\r\n  const marker1 = useSelector((state) => state.plot.marker1);\r\n  const marker2 = useSelector((state) => state.plot.marker2);\r\n  let startDate = useSelector((state) => state.location.startDate);\r\n  let endDate = useSelector((state) => state.location.endDate);\r\n\r\n  const dispatch = useDispatch();\r\n  const todayDate = useSelector((state) => state.todayDate);\r\n  if (!startDate) dispatch(setStartDate(todayDate.lastWeek));\r\n  if (!endDate) endDate = dispatch(setEndDate(todayDate.today));\r\n  const locationName = useSelector((state) => state.location.name);\r\n  const idRegex = /[A-Z0-9]+/;\r\n  const locationPath = useLocation();\r\n  const selectedId = locationPath.pathname.match(idRegex);\r\n  useEffect(() => {\r\n    let newMode = \"\";\r\n    if (linesChecked && markersChecked) newMode = \"markers+lines\";\r\n    if (linesChecked && !markersChecked) newMode = \"lines\";\r\n    if (!linesChecked && markersChecked) newMode = \"markers\";\r\n\r\n    if (linesChecked || markersChecked) dispatch(setType(\"scatter\"));\r\n    if (!linesChecked && markersChecked) dispatch(setType(\"\"));\r\n    dispatch(setMode(newMode));\r\n  }, [dispatch, linesChecked, markersChecked]);\r\n\r\n  const handleTabChange = (event, value) => {\r\n    setTabNumber(value);\r\n  };\r\n\r\n  const handleRadioChange = (event) => {\r\n    setRadioValue(event.target.value);\r\n    dispatch(setType(\"bar\"));\r\n    if (event.target.value === \"1\") dispatch(setBarMode(\"group\"));\r\n    if (event.target.value === \"2\") dispatch(setBarMode(\"stack\"));\r\n  };\r\n\r\n  const handleDisplay = (hidden) => {\r\n    if (!hidden && iconClicked === \"Date\") {\r\n      return (\r\n        <DateTab\r\n          key={hidden}\r\n          todayDate={todayDate}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n        />\r\n      );\r\n    } else if (!hidden && iconClicked === \"Graph\") {\r\n      return (\r\n        <>\r\n          <TabContext\r\n            indicatorColor=\"primary\"\r\n            value={tabNumber}\r\n            expanded={tabNumber}\r\n          >\r\n            <TabList\r\n              expanded={tabNumber}\r\n              onChange={handleTabChange}\r\n              aria-label=\"simple tabs example\"\r\n              className=\"graphSlider\"\r\n            >\r\n              <Tab\r\n                onClick={() => dispatch(setType(\"bar\"))}\r\n                label={<EqualizerIcon />}\r\n                value=\"1\"\r\n              />\r\n              <Tab\r\n                indicatorColor=\"primary\"\r\n                onClick={() => dispatch(setType(\"scatter\"))}\r\n                label={<ShowChartIcon />}\r\n                value=\"2\"\r\n              />\r\n            </TabList>\r\n\r\n            <TabPanel className=\"barsTab\" value=\"1\">\r\n              {\" \"}\r\n              <label for=\"grouped\">Group</label>\r\n              <Radio\r\n                name=\"grouped\"\r\n                value=\"1\"\r\n                color=\"secondary\"\r\n                onChange={handleRadioChange}\r\n                checked={radioValue === \"1\"}\r\n                size=\"small\"\r\n              />\r\n              <label for=\"stacked\">Stack</label>\r\n              <Radio\r\n                name=\"stacked\"\r\n                value=\"2\"\r\n                color=\"secondary\"\r\n                onChange={handleRadioChange}\r\n                checked={radioValue === \"2\"}\r\n                size=\"small\"\r\n              />\r\n            </TabPanel>\r\n            <TabPanel className=\"scatterTab\" value=\"2\">\r\n              <label for=\"markers\">Markers</label>\r\n              <Checkbox\r\n                checked={markersChecked}\r\n                className=\"checkboxes\"\r\n                color=\"secondary\"\r\n                onChange={() => setMarkersChecked(!markersChecked)}\r\n                name=\"markers\"\r\n                value=\"1\"\r\n              />{\" \"}\r\n              <label for=\"lines\">Lines</label>{\" \"}\r\n              <Checkbox\r\n                checked={linesChecked}\r\n                className=\"checkboxes\"\r\n                color=\"secondary\"\r\n                onChange={() => setLinesChecked(!linesChecked)}\r\n                name=\"lines\"\r\n                value=\"2\"\r\n              />\r\n            </TabPanel>\r\n          </TabContext>\r\n\r\n          <IconButton\r\n            onClick={() => {\r\n              setIconClicked(\"\");\r\n              dispatch(setHidden(true));\r\n            }}\r\n          >\r\n            <CancelSharpIcon />\r\n          </IconButton>\r\n        </>\r\n      ); //chart types: Radio Button(bar, stacked bar) Xheckbox(scatter, lines+scatter) Checkbox Bar vs Scatter\r\n    } else if (!hidden && iconClicked === \"Palette\") {\r\n      return (\r\n        <>\r\n          <span className=\"colorTab\">\r\n            {markerNames.one ? (\r\n              <>\r\n                <label for=\"data1\">{markerNames.one}</label>\r\n                <input\r\n                  name=\"data1\"\r\n                  type=\"color\"\r\n                  defaultValue={marker.color}\r\n                  onChange={(e) => {\r\n                    dispatch(setMarker(e.target.value, \"1\"));\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {markerNames.two ? (\r\n              <>\r\n                <label for=\"data2\">{markerNames.two}</label>\r\n                <input\r\n                  name=\"data2\"\r\n                  type=\"color\"\r\n                  value={marker1.color}\r\n                  onChange={(e) => {\r\n                    dispatch(setMarker(e.target.value, \"2\"));\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {markerNames.three ? (\r\n              <>\r\n                <label for=\"data3\"> {markerNames.three}</label>\r\n                <input\r\n                  name=\"data3\"\r\n                  type=\"color\"\r\n                  defaultValue={marker2.color}\r\n                  onChange={(e) => {\r\n                    dispatch(setMarker(e.target.value, \"3\"));\r\n                  }}\r\n                />\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </span>\r\n          <IconButton onClick={() => dispatch(setHidden(true))}>\r\n            <CancelSharpIcon />\r\n          </IconButton>\r\n        </>\r\n      );\r\n    } else if ((!hidden && iconClicked === \"Search\") || searchClicked) {\r\n      return (\r\n        <>\r\n          <span className=\"searchSpan Flex\">\r\n            <Form setSearchClicked={setSearchClicked} />\r\n          </span>\r\n          <IconButton\r\n            onClick={() => {\r\n              setIconClicked(\"Date\");\r\n            }}\r\n          >\r\n            <DateRangeIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => {\r\n              setIconClicked(\"Graph\");\r\n            }}\r\n          >\r\n            <TimelineIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => {\r\n              setIconClicked(\"Palette\");\r\n            }}\r\n          >\r\n            <PaletteSharpIcon />\r\n          </IconButton>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <span className=\"searchSpan\">\r\n            <IconButton\r\n              onClick={() => {\r\n                dispatch(setHidden(false));\r\n                setIconClicked(\"Search\");\r\n              }}\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </span>\r\n\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(setHidden(false));\r\n              setIconClicked(\"Date\");\r\n            }}\r\n          >\r\n            <DateRangeIcon />\r\n          </IconButton>\r\n\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(setHidden(false));\r\n              setIconClicked(\"Graph\");\r\n            }}\r\n          >\r\n            <TimelineIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => {\r\n              dispatch(setHidden(false));\r\n              setIconClicked(\"Palette\");\r\n            }}\r\n          >\r\n            <PaletteSharpIcon />\r\n          </IconButton>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      className={locationName.length < 1 ? \"thirdNavBar\" : \"thirdNavBar\"}\r\n      sticky=\"top\"\r\n    >\r\n      {handleDisplay(hidden)}\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default SecondNavBar;\r\n//<Link to={`${locationPath.pathname}`}>  </Link>\r\n","import React, { useState } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport { setNavigationPath } from \"../reducers/navigationReducer\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport SecondNavBar from \"./secondNavBar\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { setHidden } from \"../reducers/hiddenBarReducer\";\r\nconst NavigationBar = () => {\r\n  let [doubletap, setDoubletap] = useState(false);\r\n  const [searchClicked, setSearchClicked] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const locationName = useSelector((state) => state.location.name);\r\n  const locationId = useSelector((state) => state.location.id);\r\n  const idRegex = /[A-Z0-9]+/;\r\n  const locationPath = useLocation();\r\n\r\n  const currentPage = locationPath.pathname !== \"/\" ? \"info\" : \"home\";\r\n\r\n  const locationArray = [];\r\n  locationId.forEach((id, i) =>\r\n    locationArray.push({ name: locationName[i], id })\r\n  );\r\n  dispatch(setNavigationPath(locationPath.pathname));\r\n  const selectedId = locationPath.pathname.match(idRegex);\r\n\r\n  return (\r\n    <Navbar className=\"NaviBar\" bg=\"primary\" variant=\"dark\" sticky=\"top\">\r\n      <Navbar.Brand>\r\n        <Link to=\"/\"></Link>\r\n      </Navbar.Brand>\r\n\r\n      <Navbar\r\n        sticky=\"top\"\r\n        className={locationName.length === 0 ? \"secondNavBar \" : \"secondNavBar\"}\r\n      >\r\n        {\" \"}\r\n        <Nav className=\"selectedPlaces\">\r\n          {locationArray.map((location) => (\r\n            <Nav\r\n              key={location.id}\r\n              className={\r\n                selectedId && selectedId[0] === location.id\r\n                  ? \"selected individualPlaces\"\r\n                  : \"individualPlaces\"\r\n              }\r\n            >\r\n              <OverlayTrigger\r\n                placement=\"bottom-end\"\r\n                delay={{ show: 50, hide: 0 }}\r\n                overlay={\r\n                  <Tooltip\r\n                    placement=\"top-end\"\r\n                    id={`Tooltip-name`}\r\n                    className=\"tooltip\"\r\n                  >\r\n                    {doubletap ? \"Double-Click again to delete\" : location.name}\r\n                  </Tooltip>\r\n                }\r\n              >\r\n                <Link\r\n                  to={\r\n                    currentPage === \"infos\"\r\n                      ? `${location.id}`\r\n                      : `/station/${location.id}`\r\n                  }\r\n                  onBlur={() => {\r\n                    setDoubletap(false);\r\n                    document.querySelector(\".held\") &&\r\n                      document.querySelector(\".held\").classList.remove(\"held\");\r\n                  }}\r\n                >\r\n                  {\" \"}\r\n                  {location.name.length < 5\r\n                    ? location.name\r\n                    : location.name.slice(0, 5)}\r\n                </Link>\r\n              </OverlayTrigger>\r\n            </Nav>\r\n          ))}\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setSearchClicked(\"true\");\r\n              dispatch(setHidden(true));\r\n              if (document.querySelector(\"#search-input\"))\r\n                document.querySelector(\"#search-input\").focus();\r\n\r\n            }}\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n        </Nav>\r\n      </Navbar>\r\n      <SecondNavBar\r\n        searchClicked={searchClicked}\r\n        setSearchClicked={setSearchClicked}\r\n        key={locationName}\r\n        className=\"lastNavBar\"\r\n      />\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n// <Nav.Link href=\"/\">Home</Nav.Link>\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getTodayDate } from \"./reducers/todayDateReducer\";\n\nimport Info from \"./components/Info\";\n\nimport NavigationBar from \"./components/navBar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const pathName = useSelector((state) => state.navigation);\n  useEffect(() => {\n    const date = new Date();\n    dispatch(getTodayDate(date));\n  }, [dispatch]);\n  return (\n    <Paper elevation={0}>\n      <div className=\"App\">\n        <Router>\n          <NavigationBar />\n          <Switch>\n            <Route path=\"/station/:id\">\n              <Info key={pathName} />\n            </Route>\n            <Route path=\"/\">\n              <body>\n                <div className=\"home3\">\n                  <p>\n                    Start searching for locations now by clicking the search\n                    icon above{\" \"}\n                  </p>\n                  <img\n                    id=\"searchImage\"\n                    alt=\"search logo\"\n                    src=\"https://cdn2.iconfinder.com/data/icons/ios-7-icons/50/search-512.png\"\n                  ></img>\n                </div>\n                <div className=\"home1\">\n                  <p> We offer historical weather data using Plotly graphs.</p>\n                  <img\n                    id=\"plotly\"\n                    alt=\"plotly logo\"\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/37/Plotly-logo-01-square.png/1024px-Plotly-logo-01-square.png\"\n                  ></img>\n                </div>\n                <div className=\"home2\">\n                  <img\n                    id=\"meteostat\"\n                    alt=\"meteostat logo\"\n                    src=\"https://www.meteostat.net/logo.svg\"\n                  ></img>\n                  <p>\n                    Using Meteostat's data and a UI designed for mobile, we\n                    makes it easy to compare various locations.{\" \"}\n                  </p>\n                </div>\n              </body>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </Paper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport locationReducer from \"./reducers/locationReducer\";\r\nimport todayDateReducer from \"./reducers/todayDateReducer\";\r\nimport searchReducer from \"./reducers/searchReducer\";\r\nimport navigationReducer from \"./reducers/navigationReducer\";\r\nimport infoReducer from \"./reducers/infoReducer\";\r\nimport plotReducer from \"./reducers/plotReducer\";\r\nimport plotNames from \"./reducers/plotNames\";\r\nimport tabExpandedReducer from \"./reducers/expandedTabreducer\";\r\nimport dataViewReducer from \"./reducers/dataViewreducer\";\r\nimport hiddenBarReducer from \"./reducers/hiddenBarReducer\";\r\nimport dateRangeReducer from \"./reducers/dateRangeReducer\";\r\nconst reducer = combineReducers({\r\n  location: locationReducer,\r\n  todayDate: todayDateReducer,\r\n  searchResults: searchReducer,\r\n  navigation: navigationReducer,\r\n  infos: infoReducer,\r\n  plot: plotReducer,\r\n  markerNames: plotNames,\r\n  expandedTab: tabExpandedReducer,\r\n  dataView: dataViewReducer,\r\n  hidden: hiddenBarReducer,\r\n  dateRange: dateRangeReducer,\r\n});\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}